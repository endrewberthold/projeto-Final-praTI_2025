services:
  db:
    image: postgres:17
    container_name: enem_app_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: enem_app
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d enem_app"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: enem_app_backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/enem_app
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - BACKEND_URL=http://backend:8080
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: enem_app_frontend
    ports:
      - "80:80"
    restart: always
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://backend:8080

volumes:
  postgres_data:
